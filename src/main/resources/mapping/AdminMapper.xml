<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sp.admin.dao.AdminMapper">
    <resultMap id="adminInfo" type="com.sp.admin.entity.authority.AdminEntity">
        <result column="id" jdbcType="BIGINT" property="id" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
        <result column="enabled" jdbcType="TINYINT" property="enabled" />
        <result column="is_lock" jdbcType="TINYINT" property="Lock" />
        <result column="version" jdbcType="BIGINT" property="version" />
        <result column="when_created" jdbcType="TIMESTAMP" property="whenCreated" />
        <result column="when_updated" jdbcType="TIMESTAMP" property="whenUpdated" />
        <association property="adminRole" javaType="com.sp.admin.entity.authority.AdminRoleEntity">
            <result column="role_id" jdbcType="BIGINT" property="id" />
            <result column="role_name" jdbcType="VARCHAR" property="roleName" />
            <result column="role_is_lock" jdbcType="TINYINT" property="Lock" />
            <result column="role_version" jdbcType="BIGINT" property="version" />
            <result column="role_when_created" jdbcType="TIMESTAMP" property="whenCreated" />
            <result column="role_when_updated" jdbcType="TIMESTAMP" property="whenUpdated" />
            <collection ofType="com.sp.admin.entity.authority.AdminResourcesEntity" property="adminRoleResources">
                <result column="source_id" jdbcType="BIGINT" property="id" />
                <result column="source_pid" jdbcType="BIGINT" property="sourcePid" />
                <result column="source_type" jdbcType="INTEGER" property="sourceType" />
                <result column="iconfont" jdbcType="VARCHAR" property="iconfont" />
                <result column="source_name" jdbcType="VARCHAR" property="sourceName" />
                <result column="source_url" jdbcType="VARCHAR" property="sourceUrl" />
                <result column="source_function" jdbcType="VARCHAR" property="sourceFunction" />
                <result column="source_enabled" jdbcType="TINYINT" property="enabled" />
                <result column="source_order" jdbcType="INTEGER" property="sourceOrder" />
                <result column="source_is_lock" jdbcType="TINYINT" property="Lock" />
                <result column="source_version" jdbcType="BIGINT" property="version" />
                <result column="source_when_created" jdbcType="TIMESTAMP" property="whenCreated" />
                <result column="source_when_updated" jdbcType="TIMESTAMP" property="whenUpdated" />
            </collection>
        </association>
    </resultMap>
    <select id="selectAdminInfoByUserName" resultMap="adminInfo">
        select a.id, a.user_name, a.nick_name, a.`password`, a.enabled, a.is_lock, a.version, a.when_created, a.when_updated,
               r.id role_id, r.role_name, r.is_lock role_is_lock, r.version role_version, r.when_created role_when_created, r.when_updated role_when_updated,
               resource.id source_id, resource.source_pid, resource.source_type, resource.iconfont, resource.source_name, resource.source_url,
               resource.source_function,resource.enabled source_enabled, resource.source_order, resource.is_lock source_is_lock, resource.version source_version, resource.when_created source_when_created, resource.when_updated source_when_updated
        from admin a LEFT JOIN admin_role r on a.role_id = r.id
                     LEFT JOIN admin_role_resources rs on r.id=rs.role_id
                     LEFT JOIN  admin_resources resource on rs.resource_id = resource.id
        where a.user_name = #{userName}
    </select>

    <select id="selectAdminInfoById" resultMap="adminInfo">
        select a.id, a.user_name, a.nick_name, a.`password`, a.enabled, a.is_lock, a.version, a.when_created, a.when_updated,
               r.id role_id, r.role_name, r.is_lock role_is_lock, r.version role_version, r.when_created role_when_created, r.when_updated role_when_updated,
               resource.id source_id, resource.source_pid, resource.source_type, resource.iconfont, resource.source_name, resource.source_url,
               resource.source_function,resource.enabled source_enabled, resource.source_order, resource.is_lock source_is_lock, resource.version source_version, resource.when_created source_when_created, resource.when_updated source_when_updated
        from admin a LEFT JOIN admin_role r on a.role_id = r.id
                     LEFT JOIN admin_role_resources rs on r.id=rs.role_id
                     LEFT JOIN  admin_resources resource on rs.resource_id = resource.id
        where a.id = #{adminId}
    </select>

    <resultMap id="allAdmin" type="com.sp.admin.entity.authority.AdminEntity">
        <result column="id" jdbcType="BIGINT" property="id" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
        <result column="enabled" jdbcType="TINYINT" property="enabled" />
        <result column="is_lock" jdbcType="TINYINT" property="Lock" />
        <result column="version" jdbcType="BIGINT" property="version" />
        <result column="when_created" jdbcType="TIMESTAMP" property="whenCreated" />
        <result column="when_updated" jdbcType="TIMESTAMP" property="whenUpdated" />
        <association property="adminRole" javaType="com.sp.admin.entity.authority.AdminRoleEntity">
            <result column="role_id" jdbcType="BIGINT" property="id" />
            <result column="role_name" jdbcType="VARCHAR" property="roleName" />
            <result column="role_is_lock" jdbcType="TINYINT" property="Lock" />
            <result column="role_version" jdbcType="BIGINT" property="version" />
            <result column="role_when_created" jdbcType="TIMESTAMP" property="whenCreated" />
            <result column="role_when_updated" jdbcType="TIMESTAMP" property="whenUpdated" />
        </association>
    </resultMap>
    <select id="selectAllAdminInfo" resultMap="allAdmin">
        select a.id, a.user_name, a.nick_name, a.`password`, a.enabled, a.is_lock, a.version, a.when_created, a.when_updated,
               r.id role_id, r.role_name, r.is_lock role_is_lock, r.version role_version, r.when_created role_when_created, r.when_updated role_when_updated
        from admin a LEFT JOIN admin_role r on a.role_id = r.id
        where 1=1
        <if test="null != userName and '' != userName">
            and a.user_name = #{userName}
        </if>
        <if test="null != nickName and '' != nickName">
            and a.nick_name like concat('%', #{nickName}, '%')
        </if>
        <if test="null != roleId and 0 != roleId">
            and a.role_id = #{roleId}
        </if>
    </select>

    <insert id="insertAdmin" useGeneratedKeys="true" keyProperty="id" parameterType="com.sp.admin.entity.authority.AdminEntity">
        insert into admin(user_name, nick_name, role_id, `password`, enabled, is_lock, version, when_created, when_updated)
        values(#{userName}, #{nickName}, #{roleId}, #{password}, #{enabled}, #{Lock}, #{version}, #{whenCreated}, #{whenUpdated})
    </insert>

    <update id="updateAdmin" parameterType="com.sp.admin.entity.authority.AdminEntity">
        update admin set
        version = version+1
        <if test="nickName != null">
            ,nick_name = #{nickName}
        </if>
        <if test="roleId != null">
            ,role_id = #{roleId}
        </if>
        <if test="password != null">
            ,`password` = #{password}
        </if>
        <if test="enabled != null">
            ,enabled = #{enabled}
        </if>
        <if test="whenUpdated != null">
            ,when_updated = #{whenUpdated}
        </if>
        where
        version=#{version} and is_lock = false
        <if test="id != null">
            and  id=#{id}
        </if>
    </update>
    <delete id="deleteAdmin" parameterType="com.sp.admin.entity.authority.AdminEntity">
        DELETE FROM `admin` WHERE id = #{id}
    </delete>
</mapper>